/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import java.sql.SQLOutput;
import java.util.HashSet;
import java.util.List;
import java.util.Random;
import java.util.*;

public class Library {
    public boolean someLibraryMethod() {
        return true;
    }
    public static int [] roll(int n){
        int [] diceArray=new int[n];
        Random random=new Random();
        int rand=0;
        for (int i=0;i<n;i++){
            diceArray[i] =random.nextInt(6)+1;
        }
        return diceArray;
    }
    public static boolean containsDuplicates(int arr[]){
        int cumulativeSum[]=new int[7];
        for (int i=0;i<arr.length ;i++){
            cumulativeSum[arr[i]]++;
        }
        for (int i=0 ;i<cumulativeSum.length;i++){
            if(cumulativeSum[i] >1){
                return true;
            }
        }
        return false;
    }
    public static double calculatAverage(int arr[]){
        double sum =0;

        for(int i=0;i<arr.length ;i++){
            sum+=arr[i];
        }
        double average=sum/arr.length;
        return average;
    }
    public static int [] arraysOfArrays(int arr[][]){
        double avgArr[]=new double[arr.length];

        for (int i=0;i<arr.length ;i++){
            int n=arr[i].length;
            double sum = 0;
            for(int r=0 ; r<arr[i].length ; r++){
                sum+=arr[i][r];
            }
            avgArr[i]=sum/n;
            System.out.println("the average of array "+ i +" =>"+  avgArr[i]);
        }
        double minAvg=avgArr[0];
        int index=0 ;
        for (int i=0 ; i<avgArr.length;i++){
            if (avgArr[i] < minAvg){
                minAvg=avgArr[i];
                index=i;
            }
        }
        return arr[index];
    }
    public static int analyzingWeatherData(int [][]arr){
        int min=arr[0][0];
        int max=arr[0][0];
        Set <Integer> temperaturesSet=new HashSet<>();
        for(int i=0;i<arr.length;i++){
            for(int r=0; r<arr[i].length ;r++){
                temperaturesSet.add(arr[i][r]);
                if(arr[i][r] < min){
                    min =arr[i][r];
                }
                if(arr[i][r] >max ){
                    max=arr[i][r];
                }
            }
        }
        System.out.println("High: "+max);
        System.out.println("Low: "+min);
        List<Integer> sortedlist = new ArrayList<Integer>(temperaturesSet);
        Collections.sort(sortedlist);
        for (int i=min ;i<=max;i++){
            if(!sortedlist.contains(i)){
                System.out.println("Never saw temperature: "+i);
            }
        }
        return min;

    }
    public static String tally(List<String> votes){
       HashMap <String,Integer> counter=new HashMap<String,Integer>();
       /*
       for(String v:votes){
           System.out.println(v);
       }

        */
       for (String vote: votes){
           if(counter.containsKey(vote)){

              counter.replace(vote,counter.get(vote),counter.get(vote)+1) ;
          }
           else{
               counter.put(vote, 1);
           }

       }
        int maxValue = (Collections.max(counter.values()));
        for (Map.Entry <String,Integer> entry :counter.entrySet()){
                if(entry.getValue() ==maxValue){
                   return (entry.getKey());

                }
        }
        return "error";
       // for( Map.Entry<String, Integer> entry : counter.entrySet() ){
       //     System.out.println( entry.getKey() + " => " + entry.getValue() );
        //}

    }
    public static void main(String[] args) {
     int arr[]=roll(4);
     for (int i=0;i<arr.length;i++){
         System.out.println(arr[i]);
     }
     System.out.println(containsDuplicates(arr));
     System.out.println("the Average of array = "+calculatAverage(arr));
        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        int lowestAverage []=arraysOfArrays(weeklyMonthTemperatures);
        System.out.println("the lowest Average array is :");
        for (int i =0;i<lowestAverage.length ;i++){
            System.out.println(lowestAverage[i]);
        }
        analyzingWeatherData(weeklyMonthTemperatures);
        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");

        String winner = tally(votes);
        System.out.println(winner + " received the most votes!");


    }
}
